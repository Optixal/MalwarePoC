#!/bin/bash
# DEPRECATED. Use payload.sh instead!
# Simplifies the scp command, for lazy people
# Stores the file in the remote host's /tmp directory

TRANSFERTO="/tmp/."

status="\033[1m\033[94m[*]\033[0m"
good="\033[1m\033[92m[+]\033[0m"
error="\033[1m\033[91m[-]\033[0m"
special="\033[1m\033[38;5;198m[#]\033[0m"

if [[ $# -lt 1 ]]
then
	echo -e "$status Usage: $0 [payload]"
	exit 0
fi

# Check Requirements

if [[ ! -x $(which scp) ]] ||
   [[ ! -x $(which ssh) ]]; then
    echo "$error Both ssh and scp are required!" >&2
    exit 1
fi

if [[ $# -lt 1 ]]
then
	echo -e "$status Usage: $0 [payload]"
	exit 1
fi

PAYLOAD=$1

if [ -f $PAYLOAD ]
then
	echo -e "\n$status Loaded $PAYLOAD"
else
	echo -e "$error Unable to locate $PAYLOAD. Exiting..."
	exit 1
fi

# Check Optional Requirements

if [ -f ~/.ssh/config ]
then
	echo -e "$status Loaded ssh config file"
else
	echo -e "$warning Unable to locate ssh config file, run addsshconfig.sh."
fi

if ssh-add -l &> /dev/null
then
	echo -e "$status Loaded ssh key in ssh agent"
else
	echo -e "$warning No key loaded into ssh agent, run addsshkey.sh."
fi

# User Input

echo -ne "$status Enter remote user: "
read USER
echo -ne "$status Enter remote IP: "
read IP

# Launch

scp -r $PAYLOAD $USER@$IP:$TRANSFERTO 2> /dev/null

echo -ne "\n$good Transfer completed. SSH into host? [y/n]: "
read -rsn1 CONNECT
case $CONNECT in
	y)
		echo -e "\n$status Connecting to remote host...\n"
		ssh $USER@$IP
		;;
	n)
		echo -e "\n$status Alright, exiting..."
		;;
esac
